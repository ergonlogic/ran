---

- name: Ensure boto is installed
  apt:
    name: python-boto

- name: Generate EC2 deploy keypair
  ec2_key:
    name: "{{ ran_name }}"
    aws_secret_key: "{{ aws_secret_key }}"
    aws_access_key: "{{ aws_access_key }}"
    region: "{{ region }}"
    wait: yes
  register: ec2_key
 
- name: Record generated private key
  copy:
    content: "{{ ec2_key.key.private_key }}"
    dest: "{{ ran_project_path }}/ssh_keys/{{ ec2_key.key.name }}"
    mode: 0600
  when: ec2_key.changed

- name: Create basic ec2 group
  ec2_group:
    name: "{{ ran_name }}"
    description: a basic EC2 group
    aws_secret_key: "{{ aws_secret_key }}"
    aws_access_key: "{{ aws_access_key }}"
    region: "{{ region }}"
    rules:
      - proto: tcp
        from_port: 80
        to_port: 80
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        from_port: 22
        to_port: 22
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        from_port: 443
        to_port: 443
        cidr_ip: 0.0.0.0/0
    rules_egress:
      - proto: all
        from_port: 0
        to_port: 65535
        cidr_ip: 0.0.0.0/0


- name: Deploy and manage EC2 instance(s).
  ec2:
    key_name: "{{ ran_name }}"
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    image: "{{ image }}"
    instance_type: "{{ instance_type }}"
    group: "{{ ran_name }}"
    region: "{{ region }}"
    instance_tags:
      ran_type: "{{ ran_name }}"
    exact_count: "{{ count }}"
    count_tag: 'ran_type'
    wait: yes
  register: ec2

#- name: Add new instance(s) to host group.
#  add_host:
#    hostname: "{{ item.public_ip }}"
#    groupname: "ran_host_group_{{ ran_name }}"
#  when: item.state == "running"
#  with_items: ec2.instances

#- name: Add existing instance(s) to host group.
#  add_host:
#    hostname: "{{ item.public_ip }}"
#    groupname: "ran_host_group_{{ ran_name }}"
#  when: item.state == "running"
#  with_items: ec2.tagged_instances

- name: Add existing instance(s) to host group.
  add_host:
    hostname: "{{ item.1.public_ip }}"
    groupname: "ran_host_group_{{ ran_name }}"
    ran_fqdn: "{{ ran_name }}{{ item.0 }}.{{ route53_zone }}"
    ran_hostname: "{{ ran_name }}{{ item.0 }}"
  when: item.1.state == "running"
  #with_indexed_items: "{{ ec2.tagged_instances | default(ec2.instances) }}"
  with_indexed_items: ec2.tagged_instances

- name: Wait for SSH to come up
  wait_for:
    host: "{{ item.public_dns_name }}"
    port: 22
    delay: 5
    timeout: 300
    state: started
  when: item.state == "running"
  with_items: ec2.instances

- name: Create host DNS entries
  route53:
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    command: create
    zone: "{{ route53_zone }}"
    record: "{{ ran_name }}{{ item.0 }}.{{ route53_zone }}"
#    overwrite: yes
    type: A
    ttl: 300
    value: "{{ item.1.public_ip }}"
  with_indexed_items: ec2.tagged_instances
  #no_log: True

#- name: Set hostnames
#  hostname:
#    name: "{{ ran_name }}{{ item.0 }}"
#  delegate_to: "{{ item.1.public_ip }}"
  #with_indexed_items: "{{ ec2.instances | default(ec2.tagged_instances) }}"
#  with_indexed_items: "{{ ec2.tagged_instances | default(ec2.instances) }}"
